@model IEnumerable<Simple.Models.UserLog>

@{
    ViewData["Title"] = "Index";
    UserLog sampleLogItem = new UserLog();    // makes it easy to use a label for property names and works when the log is empty
}

<h1>Current UTC time: @DateTime.UtcNow.ToString()</h1>

<table class="table" id="logTable">
    <thead>
        <tr>
            <th>
                <label asp-for="@sampleLogItem.TimeStamp"></label>
            </th>
            <th>
                <label asp-for="@sampleLogItem.Ipaddress"></label>
            </th>
            <th>
                <label asp-for="@sampleLogItem.AspnetIdentityId"></label>
            </th>
            <th>
                <label asp-for="@sampleLogItem.UserAgent"></label>
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
            <tr style="background-color: @item.Color.ToHtmlColor("20")">
            <td >
                @item.TimeStamp
            </td>
            <td>
                @item.Ipaddress
            </td>
            <td>
                @item.AspnetIdentityId
            </td>
            <td>
                @item.UserAgent
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts 
{
    <script src="~/js/fancyTable.min.js" ></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#logTable").fancyTable({
                sortColumn: 0,
                sortOrder: 'descending',
                pagination: true,
                perPage: 10,
                globalSearch: true
            });
        });
    </script>
}